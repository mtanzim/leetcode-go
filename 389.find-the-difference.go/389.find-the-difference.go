package main

/*
 * @lc app=leetcode id=389 lang=golang
 *
 * [389] Find the Difference
 *
 * https://leetcode.com/problems/find-the-difference/description/
 *
 * algorithms
 * Easy (60.40%)
 * Likes:    3266
 * Dislikes: 398
 * Total Accepted:    441.4K
 * Total Submissions: 730.9K
 * Testcase Example:  '"abcd"\n"abcde"'
 *
 * You are given two strings s and t.
 *
 * String t is generated by random shuffling string s and then add one more
 * letter at a random position.
 *
 * Return the letter that was added to t.
 *
 *
 * Example 1:
 *
 *
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 *
 *
 * Example 2:
 *
 *
 * Input: s = "", t = "y"
 * Output: "y"
 *
 *
 *
 * Constraints:
 *
 *
 * 0 <= s.length <= 1000
 * t.length == s.length + 1
 * s and t consist of lowercase English letters.
 *
 *
 */

// @lc code=start
func findTheDifference(s string, t string) byte {

	if len(s) > len(t) {
		panic("bad")
	}

	hmS := make(map[rune]int64)
	hmT := make(map[rune]int64)
	for _, r := range s {
		hmS[r] = hmS[r] + 1
	}
	for _, r := range t {
		hmT[r] = hmT[r] + 1
	}
	for k, v := range hmT {
		// fmt.Printf("%c,%d\n", k, v)
		otherV, ok := hmS[k]
		if otherV != v || !ok {
			return byte(k)
		}
	}
	panic("bad")
}

// @lc code=end
